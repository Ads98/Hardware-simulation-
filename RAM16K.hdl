// This file is adapted from part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[8], load, address[14];
    OUT out[8];

    PARTS:
    // Put your code here:
	DMux4Way(in=load,sel=address[0..1],a=a,b=b,c=c,d=d);
	RAM4K(in=in,load=a,address=address[2..13],out=out0);
	RAM4K(in=in,load=b,address=address[2..13],out=out1);
	RAM4K(in=in,load=c,address=address[2..13],out=out2);
	RAM4K(in=in,load=d,address=address[2..13],out=out3);
	Mux4Way8(a=out0,b=out1,c=out2,d=out3,sel=address[0..1],out=out);
 }
